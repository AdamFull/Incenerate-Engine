{
	version: 450;

	enable_extensions: [
		"GL_ARB_separate_shader_objects",
		"GL_ARB_shading_language_420pack"
	];

	definitions: [];
	require_extensions: [];
	includes: ["compute_common"];

	code: 
	"""
		layout(local_size_x = 8, local_size_y = 8) in;

		layout(binding = 0, r11f_g11f_b10f) uniform writeonly image2D writeColor;
		layout(binding = 1) uniform sampler2D samplerColor;
		
		void main()
		{
			uvec2 image_size = imageSize(writeColor);
		
			uvec2 px = uvec2(0, 0);
			vec2 uv = vec2(0.0, 0.0);
			if(swizzle_compute_workgroups_8x8(gl_GlobalInvocationID.xy, gl_LocalInvocationID.xy, image_size, uv, px))
				return;
		
			vec4 fragcolor = texture(samplerColor, uv);
		
			imageStore(writeColor, ivec2(px), fragcolor);
		}
	""";
}
#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, r8) uniform writeonly image2D writeColor;
layout(binding = 1) uniform sampler2D samplerColor;

layout(push_constant) uniform FAOBlur 
{
	int blur_range;
} ubo;

void main()
{
	ivec2 iUV = ivec2(gl_GlobalInvocationID.xy);
	vec2 uv = (iUV + 0.5f) / vec2(imageSize(writeColor).xy);

	
	vec2 texelSize = 1.0 / vec2(textureSize(samplerColor, 0));

	vec2 colorSize = textureSize(samplerColor, 0);
	vec4 color = vec4(0.0f);

	int n = 0;
	float result = 0.0;
	for (int x = -ubo.blur_range; x < ubo.blur_range; x++) 
	{
		for (int y = -ubo.blur_range; y < ubo.blur_range; y++) 
		{
			vec2 offset = vec2(float(x), float(y)) * texelSize;
			result += texture(samplerColor, uv + offset).r;
			n++;
		}
	}

	color = vec4(result / (float(n)));

	imageStore(writeColor, iUV, color);
}
#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, r11f_g11f_b10f) uniform writeonly image2D writeColor;
layout(binding = 1) uniform sampler2D samplerColor;

layout(push_constant) uniform UBOFilbGrain
{
    float amount;
    float time;
} ubo;

void main()
{
	vec2 uv = (gl_GlobalInvocationID.xy + vec2(0.5f)) / vec2(imageSize(writeColor).xy);

    vec4 color = texture(samplerColor, uv);
	
    float randomIntensity = fract(10000 * sin((gl_GlobalInvocationID.x + gl_GlobalInvocationID.y * ubo.time) * 3.14));
    float amount = ubo.amount * randomIntensity;

    color.rgb += amount;

    imageStore(writeColor, ivec2(gl_GlobalInvocationID.xy), color);
}
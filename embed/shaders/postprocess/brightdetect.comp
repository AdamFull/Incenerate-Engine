#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, r11f_g11f_b10f) uniform writeonly image2D writeColor;
layout(binding = 1) uniform sampler2D samplerColor;

layout(push_constant) uniform UBOBloom
{
    float bloom_threshold;
} ubo;

void main()
{
	vec2 uv = (gl_GlobalInvocationID.xy + vec2(0.5f)) / vec2(imageSize(writeColor).xy);

    vec4 color = vec4(0.0);
	vec3 fragcolor = texture(samplerColor, uv).rgb;
    float brightness = dot(fragcolor, vec3(0.2126, 0.7152, 0.0722));
	if(brightness > ubo.bloom_threshold)
        color = vec4(fragcolor, 1.0);
    else
        color = vec4(0.0, 0.0, 0.0, 1.0);

    imageStore(writeColor, ivec2(gl_GlobalInvocationID.xy), color);
}
#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_GOOGLE_include_directive : require

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(binding = 0, r8) uniform writeonly image3D outNoise;

#include "noise.glsl"

void main() 
{
	vec3 position = (gl_GlobalInvocationID.xyz);
	vec3 uv = (position + 0.5f) / vec3(imageSize(outNoise).xyz);

	const float frequency = 4.0f;

	float noiseR = fBmTiledWorley(uv, frequency);
	float noiseG = fBmTiledWorley(uv, frequency * 4.f);
	float noiseB = fBmTiledWorley(uv, frequency * 8.f);
	
	float noise = noiseR * 0.625 + noiseG * 0.25 + noiseB * 0.125;
	

	imageStore(outNoise, ivec3(gl_GlobalInvocationID.xyz), vec4(noise, noise, noise, 1.0f));
}